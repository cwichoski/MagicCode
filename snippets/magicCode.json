{
    "createModel": {
        "prefix": "create",
        "description": "Create Magic Model Specifications",
        "body": [
            "//---------------------------------------------------",
            "// Model specification. ",
            "// Code will be generated from these specifications",
            "//     - Fill the blanks indicated by < >",
            "//     - modify all properties you need to do so",
            "//     - Do not forget to set the output destination in 'Start'",
            "//     - save the file",
            "//     - Set 'MagicCode Generator' in the context menu as shown in the demo video",
            "// model specifications are defined in an array of objects",
            "// dependent on the needs, more than one service can defined as well as",
            "// more than one collection can also be defined",
            "// the relationship between all the objects is:",
            "// server (only one)",
            "//      |",
            "//      -----> service (one or more)",
            "//                |",
            "//                 ------> collection (one or more)",
            "//---------------------------------------------------",
            "import {Model, Start} from 'magicCode.js';",
            "",
            " ",
            "@Model([",
            "   {",
            "       // Server specifications",
            "       server: {",
            "           path: '/',              // Main server entry point",
            "           name: 'NodeJS',         // server type: nodeJS, Apache",
            "           host: 'localhost',      // host name",
            "           port: 5000,             // server port",
            "           url: 'http://localhost',// main server endpoint",
            "           description: '<Include here your description>',",
            "           cryptoKey: '<Include here your application encryption key',",
            "       }",
            "   },",
            "   {",
            "       // service specifications",
            "       service: {",
            "           path: '/',        // Service endpoint",
            "           name: 'myClass',  // WARNING this property name should be identical to the class name at",
            "                             //the end of this document and in 'Start'.",
            "           type: 'mongoose', // Template used to generate code. Could be: mongoose(server), nativescript(client)",
            "           connector: '<Include here your dataBase connector>'",
            "       }",
            "   },",
            "   {",
            "       // Collection specifications",
            "       // you can define more than one collection per model",
            "       // each collection is defined as an object in the Array of objects",
            "       collection: {",
            "           path: '/endpoint',          // change the endpoint to yours",
            "           name: 'collectionName',     // collection name",
            "           model: {",
            "                   // _id: { type: String, label:'id', required: true} -> this an example",
            "                   <include here the object's properties>",
            "           },",
            "       view: 'form',                   // used to generate client code",
            "       // Indicate with true or false if a method is included in the generated code",
            "       methods: {",
            "           get: <true, false>,",
            "           put: <true, false>,",
            "           post: <true, false>,",
            "           delete: <true, false>",
            "       }",
            "   }",
            "}",
            "])",
            "class myClass {} // Change for your class name ",
            "Start(myClass,'<Include the absolute path where to generate the code>');"
        ]
    }
}